#######################
# ***    PLUGINS   *** #
########################
set -g @plugin 'tmux-plugins/tmux-yank'

########################
# ***    DISPLAY   *** #
########################

# Set tmux to display in 256 colors
# This is what TERM will be inside the tmux session
# set-option -g default-terminal "tmux-256color"
# This tells tmux to enable full colors if TERM outside is xterm-256color
# set-option -g terminal-overrides ",xterm-256color:RGB"

# Set border colors
set-option -g pane-border-style 'fg=#343D46,bg=colour0'
set-option -g pane-active-border-style 'fg=colour3,bg=colour0'

# Set status line message style
set -g message-style "fg=colour5,bg=default"

# Set mode style (including history bar)
set -g mode-style "fg=colour3"

########################
# ***    GENERAL   *** #
########################

# Start windows numbering at 1
set -g base-index 1

# Start pane numbering at 1
setw -g pane-base-index 1

# Re-draw status window every 5 seconds
set -g status-interval 5

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# shorten command delay
set -sg escape-time 1

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "tmux.conf source"

# Bind <prefix>- to split window horizontally
bind - split-window -v -c "#{pane_current_path}"
# Bind <prefix>| to split window vertically
bind | split-window -h -c "#{pane_current_path}"

# Map vim movement keys as pane movement keys with prefix
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# Quickly edit todo list
bind-key t split-window -h "vim ~/todo.md"

if-shell "uname | grep -q Darwin" {
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
  bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
} {
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
  bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
}

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

#########################
# ***  STATUS BAR   *** #
#########################

# Enable status bar
set-option -g status on

# Set window list to center
set -g status-justify centre

# Set default bg/fg settings for status bar
set-option -g status-style bright,bg='#1B2B34',fg=default

set-window-option -g window-status-current-format ''
set-window-option -g window-status-current-format ''
set-window-option -g window-status-current-style fg=colour114,bg=default,bright


# Left Status Bar: [CPU Usage]
set -g status-left "#[fg=colour8] ≣"
set -g status-left-length 85

# Right Status Bar: [Session Name][Date][Time]
set -g status-right "#[fg=magenta]#S #[fg=colour8]‹#[fg=yellow]#[fg=yellow,bold,bg=default] %b %d %Y #[fg=colour8]‹#[fg=green,bg=default]#[bg=default,fg=green,bold]%l:%M %p #[fg=blue]"

# Auto-hide status bar if pane is maximized
set-hook -g 'after-resize-pane'  'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_zoomed_flag} -gt 1 ]; then tmux set status off; else tmux set status on; fi"'

# Initialize TMUX plugin manager
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
run '~/.tmux/plugins/tpm/tpm'
